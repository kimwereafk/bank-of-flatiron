{"ast":null,"code":"var _jsxFileName = \"/home/kimwere/Development/phase-2/code-challenge/code-challenge-1/bank-of-flatiron/src/components/Account.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    fetch(\"http://localhost:8001/transactions?q=\" + query).then(resp => {\n      if (!resp.ok) {\n        throw new Error(\"Failed to fetch transactions\");\n      }\n      return resp.json();\n    }).then(data => {\n      setTransactions(data);\n    }).catch(error => {\n      setError(error.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [query]);\n  function handleSearch(e) {\n    setQuery(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading transactions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Account, \"9LK0B42Xzo7TTa04qeHLKZXNWEk=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useEffect","useState","TransactionsList","Search","AddTransactionForm","jsxDEV","_jsxDEV","Account","_s","transactions","setTransactions","query","setQuery","loading","setLoading","error","setError","fetch","then","resp","ok","Error","json","data","catch","message","finally","handleSearch","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kimwere/Development/phase-2/code-challenge/code-challenge-1/bank-of-flatiron/src/components/Account.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction Account() {\n  const [transactions, setTransactions] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    fetch(\"http://localhost:8001/transactions?q=\" + query)\n      .then((resp) => {\n        if (!resp.ok) {\n          throw new Error(\"Failed to fetch transactions\");\n        }\n        return resp.json();\n      })\n      .then((data) => {\n        setTransactions(data);\n      })\n      .catch((error) => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [query]);\n\n  function handleSearch(e) {\n    setQuery(e.target.value);\n  }\n\n  return (\n    <div>\n      <Search handleSearch={handleSearch} />\n      <AddTransactionForm />\n      {loading ? (\n        <p>Loading transactions...</p>\n      ) : error ? (\n        <p>Error: {error}</p>\n      ) : (\n        <TransactionsList transactions={transactions} />\n      )}\n    </div>\n  );\n}\n\nexport default Account;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACdC,KAAK,CAAC,uCAAuC,GAAGN,KAAK,CAAC,CACnDO,IAAI,CAAEC,IAAI,IAAK;MACd,IAAI,CAACA,IAAI,CAACC,EAAE,EAAE;QACZ,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACA,OAAOF,IAAI,CAACG,IAAI,CAAC,CAAC;IACpB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdb,eAAe,CAACa,IAAI,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAET,KAAK,IAAK;MAChBC,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;IACzB,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACbZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,SAASgB,YAAYA,CAACC,CAAC,EAAE;IACvBhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B;EAEA,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA,CAACH,MAAM;MAACwB,YAAY,EAAEA;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtC7B,OAAA,CAACF,kBAAkB;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrBtB,OAAO,gBACNP,OAAA;MAAAyB,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAC5BpB,KAAK,gBACPT,OAAA;MAAAyB,QAAA,GAAG,SAAO,EAAChB,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAErB7B,OAAA,CAACJ,gBAAgB;MAACO,YAAY,EAAEA;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CA5CQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA8ChB,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}