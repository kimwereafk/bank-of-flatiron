{"ast":null,"code":"var _jsxFileName = \"/home/kimwere/Development/phase-2/code-challenge/code-challenge-1/bank-of-flatiron/src/components/AccountContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountContainer() {\n  _s();\n  const [transaction, setTransaction] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions?q=\" + query).then(resp => resp.json()).then(transaction => setTransaction(transaction));\n  }, [query]);\n  function handleSearch(e) {\n    setQuery(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactions: transaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountContainer, \"TGHL9Tu/fBV0orC7qrZLUvQWd6Q=\");\n_c = AccountContainer;\nexport default AccountContainer;\nvar _c;\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"names":["React","useEffect","useState","TransactionsList","Search","AddTransactionForm","jsxDEV","_jsxDEV","AccountContainer","_s","transaction","setTransaction","query","setQuery","fetch","then","resp","json","handleSearch","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","transactions","_c","$RefreshReg$"],"sources":["/home/kimwere/Development/phase-2/code-challenge/code-challenge-1/bank-of-flatiron/src/components/AccountContainer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transaction, setTransaction] = useState([])\n  const [query, setQuery] = useState(\"\")\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions?q=\" + query)\n      .then((resp) => resp.json())\n      .then(transaction => setTransaction(transaction))\n  }, [query])\n  function handleSearch(e) {\n    setQuery(e.target.value)\n  }\n  return (\n    <div>\n      <Search handleSearch={handleSearch} />\n      <AddTransactionForm />\n      <TransactionsList transactions={transaction} />\n    </div>\n  );\n}\n\nexport default AccountContainer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,uCAAuC,GAAGF,KAAK,CAAC,CACnDG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAACL,WAAW,IAAIC,cAAc,CAACD,WAAW,CAAC,CAAC;EACrD,CAAC,EAAE,CAACE,KAAK,CAAC,CAAC;EACX,SAASM,YAAYA,CAACC,CAAC,EAAE;IACvBN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B;EACA,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACH,MAAM;MAACc,YAAY,EAAEA;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCnB,OAAA,CAACF,kBAAkB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtBnB,OAAA,CAACJ,gBAAgB;MAACwB,YAAY,EAAEjB;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACjB,EAAA,CAlBQD,gBAAgB;AAAAoB,EAAA,GAAhBpB,gBAAgB;AAoBzB,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}